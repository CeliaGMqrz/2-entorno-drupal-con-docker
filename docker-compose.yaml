version: '3.8'

services:
# DRUPAL Y PHP
  php:
    container_name: drupal
    volumes:
    - type: volume
      source: staticfiles
      target: /opt/drupal/web
    image: jonathan-drupal
    restart: always
    hostname: drupal
    networks:
      - red-entorno

# SERVIDOR WEB
  nginx:
#    container_name: nginx # Lo quitamos para hacer el scale del contenedor
    deploy:
      replicas: 2 # Escalamos el servicio
      update_config:
        parallelism: 1
        delay: 1m30s
    depends_on:
      - "php"
    volumes:
    - type: volume
      source: staticfiles
      target: /var/www/html
    environment:
      NGINX_BACKEND_PORT: ${NGINX_BACKEND_PORT}
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME}
      NGINX_BACKEND_HOST: ${NGINX_BACKEND_HOST}
    image: jonathan-nginx
    restart: always
    networks:
      - red-entorno
#    ports:
#     - 80:80
#     - 443:443

# BASE DE DATOS
  db:
    container_name: mysql
    volumes:
    - type: volume
      source: drupaldatabase
      target: /var/lib/mysql
    image: mariadb
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - red-entorno

  # BALANCEADOR DE CARGA
  haproxy:
    container_name: haproxy
    image: haproxy:1.7
    volumes:
    - type: volume
      source: confhaproxy
      #target: /usr/local/etc/haproxy/haproxy.cfg
      target: /usr/local/etc/haproxy
    depends_on:
      - nginx
    ports:
      - "80:80"
      - "8181:8181"
    networks:
      - red-entorno
      

# VOLUMENES NECESARIOS
volumes:
  staticfiles:
    driver: local
    driver_opts:
      type: none
      device: ./volumen/files
      o: bind
  drupaldatabase:
    driver: local
    driver_opts:
      type: none
      device: ./volumen/mysql
      o: bind
  confhaproxy:
    driver: local
    driver_opts:
      type: none
      device: ./volumen/haproxy
      o: bind

# RED
networks:
  red-entorno: